// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  role       String
  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  RefreshToken RefreshToken[]

  Account     Account[]
  BankAccount BankAccount[]
  Transaction Transaction[]
  @@map("users")
}

model RefreshToken {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  token      String
  valid      Boolean
  expiresAt  DateTime
  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("refresh_tokens")
}

model Account {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [user_id], references: [id])
  user_id     String
  name        String
  description String
  created_at  DateTime @default(now())
  updatedAt   DateTime @updatedAt

  BankAccount BankAccount[]
  Transaction Transaction[]
  @@map("accounts")
}

model BankAccount {
  id         String   @id @default(uuid())
  name       String
  balance    Float
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  account    Account  @relation(fields: [account_id], references: [id])
  account_id String
  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Transaction Transaction[]
  @@map("bank_accounts")
}

model Category {
  id         String   @id @default(uuid())
  name       String
  type       String
  created_at DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Transaction Transaction[]
  @@map("categories")
}

model Transaction {
  id              String      @id @default(uuid())
  date            DateTime
  description     String
  amount          Float
  type            String
  category        Category    @relation(fields: [category_id], references: [id])
  category_id     String
  user            User        @relation(fields: [user_id], references: [id])
  user_id         String
  account         Account     @relation(fields: [account_id], references: [id])
  account_id      String
  bankAccount     BankAccount @relation(fields: [bank_account_id], references: [id])
  bank_account_id String
  created_at      DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@map("transactions")
}
